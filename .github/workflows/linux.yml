name: Linux Test

on:
  push:
    tags:
      - v1.**
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  #### x64 LINUX build ####
  build-linux64:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: install yasm
      run: |
        sudo apt-get update
        sudo apt-get install -y yasm

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    
    - name: Build ffmpeg
      run: |
        pushd ffmpeg/build-scripts
        ./build_ffmpeg.sh
        popd

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        install-deps: 'true'
        cache: 'true'
        cache-key-prefix: 'install-qt-action-x64-linux'

    - name: Configure CMake
      run: >
        cmake
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
        -DRPSB_MAKE_PLUGIN_FILE=OFF

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target INSTALL

    - name: Archive raw files
      uses: actions/upload-artifact@v3
      with:
        name: linux-x64
        path: ${{github.workspace}}/install/
        if-no-files-found: error
  